{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["C:/Users/Luka/E-Commerce/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","total","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAC1BE,IAAD,IAAUA,IAAI,CAACE,SADY,CAAtC;AAIP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAC3BE,IAAD,IAAUA,IAAI,CAACI,MADa,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAC3BC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAnF,EAA6F,CAA7F,CADc,CAA3C;AAIP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EACtBC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACK,KAAD,EAAQH,QAAR,KAAqBG,KAAK,GAAGH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KAA3E,EAAmF,CAAnF,CADS,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart], (cart) => cart.cartItems\n);\n\nexport const selectCartHidden = createSelector(\n    [selectCart], (cart) => cart.hidden\n);\n\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0)\n);\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems], cartItems => cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price , 0)\n);"]},"metadata":{},"sourceType":"module"}